<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ww.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.ww.model.User">
        <id column="userid" property="userid" jdbcType="INTEGER"/>
        <result column="logincode" property="logincode" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="state" property="state" jdbcType="INTEGER"/>
        <result column="bz" property="bz" jdbcType="VARCHAR"/>
    </resultMap>



    <sql id="Base_Column_List">
    userid, logincode, password, roleid,username, state, bz
  </sql>

    <select id="selectByPrimaryKey" resultMap="UserRoleList" parameterType="java.lang.Integer">
    select 
    u.userid, u.logincode, u.password, u.roleid,u.username, u.state, u.bz,r.rolename
    from users u,role r
    where userid = #{userid,jdbcType=INTEGER}
    AND  r.roleid = u.roleid
  </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from users
    where userid = #{userid,jdbcType=INTEGER}
  </delete>

    <insert id="insert" parameterType="com.ww.model.User">
    insert into users (userid, logincode, password, 
      username, roleid, state, 
      bz)
    values (#{userid,jdbcType=INTEGER}, #{logincode,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{role.roleid,jdbcType=INTEGER}, #{state,jdbcType=INTEGER},
      #{bz,jdbcType=VARCHAR})
  </insert>

    <insert id="insertSelective" parameterType="com.ww.model.User">
        insert into users
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userid != null">
                userid,
            </if>
            <if test="logincode != null">
                logincode,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="role.roleid != null">
                roleid,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="bz != null">
                bz,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userid != null">
                #{userid,jdbcType=INTEGER},
            </if>
            <if test="logincode != null">
                #{logincode,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="role.roleid != null">
                #{role.roleid,jdbcType=INTEGER},
            </if>
            <if test="role.roleid == null">
                #{2,jdbcType=INTEGER},
            </if>
            <if test="state != null">
                #{state,jdbcType=INTEGER},
            </if>
            <if test="bz != null">
                #{bz,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.ww.model.User">
        update users
        <set>
            <if test="logincode != null">
                logincode = #{logincode,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="role.roleid != null">
                roleid = #{role.roleid ,jdbcType=INTEGER},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=INTEGER},
            </if>
            <if test="bz != null">
                bz = #{bz,jdbcType=VARCHAR},
            </if>
        </set>
        where userid = #{userid,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.ww.model.User">
    update users
    set logincode = #{logincode,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      roleid = #{role.roleid,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      bz = #{bz,jdbcType=VARCHAR}
    where userid = #{userid,jdbcType=INTEGER}
  </update>

    <select id="selectUserList" resultMap="UserRoleList" parameterType="java.util.Map">
        select u.userid, u.username,
        u.logincode, u.state,u.bz,r.roleid,r.rolename,r.bz r_bz from users u
        ,role r where u.roleid = r.roleid
        <if test="username != null &amp;&amp; !&quot;&quot;.equals(username)">and u.username like '%'
            #{username} '%'
        </if>
        <if test="logincode != null &amp;&amp; !&quot;&quot;.equals(logincode)">and u.logincode like '%'
            #{logincode} '%'
        </if>
        ORDER BY userid
    </select>


    <resultMap id="UserRoleList" type="com.ww.model.User" extends="BaseResultMap">
        <association property="role" javaType="com.ww.model.Role">
            <id property="roleid" column="roleid" jdbcType="INTEGER"/>
            <result property="rolename" column="rolename" jdbcType="VARCHAR"/>
            <result property="bz" column="r_bz" jdbcType="VARCHAR"/>
        </association>
    </resultMap>


    <!--分页查询-->
    <select id="selectUserListByPage" resultMap="UserRoleList" parameterType="java.util.Map">
        select u.userid, u.username,
        u.logincode, u.state,u.bz ,r.roleid,r.rolename,r.bz r_bz from users u
        ,role r where u.roleid = r.roleid
        <if test="username != null &amp;&amp; !&quot;&quot;.equals(username)">and u.username like '%'
            #{username} '%'
        </if>
        <if test="logincode != null &amp;&amp; !&quot;&quot;.equals(logincode)">and u.logincode like '%'
            #{logincode} '%'
        </if>
        ORDER BY userid
    </select>

</mapper>